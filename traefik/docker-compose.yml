version: "3.7"

networks:
  web-network:

services:
  reverse-proxy:
    image: traefik:v3.0
    # labels:
    #   - "traefik.http.routers.traefik-dashboard.entrypoints=http"
    #   - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.console.lab.io`)"
    #   - "traefik.http.routers.traefik-dashboard.service=dashboard@internal"
    #   - "traefik.http.routers.traefik-dashboard-api.entrypoints=http"
    #   - "traefik.http.routers.traefik-dashboard-api.rule=Host(`traefik.console.lab.io`) && PathPrefix(`/api`)"
    #   - "traefik.http.routers.traefik-dashboard-api.service=api@internal"
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--configFile=/etc/traefik/traefik.yml"  # 使用静态配置文件
#      - "--log.level=DEBUG"
#      - "--api.insecure=true"
#      - "--providers.docker"
#      - "--entrypoints.http.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./dynamic.yml:/etc/traefik/dynamic.yml
      - ./ssl:/etc/traefik/ssl
    networks:
      - web-network

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami:v1.10.1
#    labels:
#      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`) || PathPrefix(`/whoami`)"
    networks:
      - web-network

  test:
    image: nginx:1.21.3
    labels:
      - "traefik.http.routers.test.entrypoints=http"
      - "traefik.http.routers.test.rule=Host(`test.cuiwei.net`)"

      - "traefik.http.routers.test-secure.entrypoints=https"
      - "traefik.http.routers.test-secure.tls=true"
      - "traefik.http.routers.test-secure.rule=Host(`test.cuiwei.net`)"
    networks:
      - web-network