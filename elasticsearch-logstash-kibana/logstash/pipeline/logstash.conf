input {
    beats {
        port => 5044
    }
    http {
        host => "0.0.0.0"
        port => "8099"
    }
    #从文件读取数据
    file {
        path => ["/var/log/nginx/access.log"]
        type => "nginx_access"
        start_position => "beginning"
        exclude => "*.gz"
    }
    #从文件读取数据
    file {
        path => ["/var/log/nginx/error.log"]
        type => "nginx_error"
        start_position => "beginning"
        exclude => "*.gz"
    }
}
filter {
	if [type] == "nginx_access"{
        grok {
#    	    patterns_dir => ["/usr/share/logstash/patterns"]
            match => ["message", "%{HTTPD_COMBINEDLOG}"] #或者使用自定义%{NGINX_ACCESS}
            remove_field => "message"	#删除出不需要的字段
        }
	}
	if [type] == "nginx_error"{
		grok {
			match => [
			    "message", "(?<time_local>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:log_level}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:error_message}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server}?)(?:, request: %{QS:request})?(?:, upstream: (?<upstream>\"%{URI}\"|%{QS}))?(?:, host: %{QS:request_host})?(?:, referrer: \"%{URI:referrer}\")?",
				"message", "(?<time_local>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:log_level}\]\s{1,}%{GREEDYDATA:error_message}"
			]
		}
	}

    mutate {
        gsub => ["agent", "\"", ""]
        gsub => ["referrer", "\"", ""]
        gsub => ["forwarder", "\"", ""]
        convert => ["status", "integer"]
        convert => ["body_bytes", "integer"]
    }
    date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    ruby {
        #增加一个字段log_day
        code => "event.set('log_day', event.get('@timestamp').time.localtime.strftime('%Y%m%d'))"
    }
}
output {
    if [type] == "nginx_access"{
        elasticsearch {
            hosts => ["elasticsearch"]
                manage_template => false
                index =>"nginx-log-access-%{+YYYYMMdd}"
#                index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
        }
	}
	if [type] == "nginx_error"{
        elasticsearch {
            hosts => ["elasticsearch"]
                manage_template => false
                index =>"nginx-log-error-%{log_day}"
        }
	}

  stdout {
    codec => rubydebug
  }
}